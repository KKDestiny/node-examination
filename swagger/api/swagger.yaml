---
swagger: "2.0"
info:
  description: "Building a RESTful CRUD API with Node.js, Express/Koa and MongoDB."
  version: "1.0.0"
  title: "NBA player"
host: "127.0.0.1:3030"
basePath: "/v1"
tags:
- name: "player"
  description: "Everything about NBA Players"
schemes:
- "http"
paths:
  /player:
    post:
      tags:
      - "player"
      summary: "Create a new player"
      description: ""
      operationId: "addPlayer"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Player object"
        required: true
        schema:
          $ref: "#/definitions/Player"
      responses:
        405:
          description: "Invalid input"
      x-swagger-router-controller: "Player"
    put:
      tags:
      - "player"
      summary: "Update an existing player"
      description: ""
      operationId: "updatePlayer"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Player object that needs to be added to the team"
        required: true
        schema:
          $ref: "#/definitions/Player"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Player not found"
        405:
          description: "Validation exception"
      x-swagger-router-controller: "Player"
  /player/{playerId}:
    get:
      tags:
      - "player"
      summary: "Find player by ID"
      description: "Returns a single player"
      operationId: "getPlayerById"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "playerId"
        in: "path"
        description: "ID of player to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Player"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Player not found"
      x-swagger-router-controller: "Player"
    delete:
      tags:
      - "player"
      summary: "Deletes a player"
      description: ""
      operationId: "deletePlayer"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "playerId"
        in: "path"
        description: "Player id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Player not found"
      x-swagger-router-controller: "Player"
definitions:
  Player:
    type: "object"
    required:
    - "name"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        example: "LeBron"
      position:
        type: "string"
        description: "player position in the team"
        enum:
        - "C"
        - "PF"
        - "SF"
        - "PG"
        - "SG"
    xml:
      name: "Player"
    example:
      name: "LeBron"
      id: 0
      position: "C"
externalDocs:
  description: "Find out more about this examination"
  url: "https://github.com/bridge5/node-examination"
